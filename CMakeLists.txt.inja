cmake_minimum_required(VERSION {{cmake_version}})

# Set your project name and version
project(
  {{ name }} 
  VERSION 1.0 
  DESCRIPTION {{description}}
  {% if lang == "cpp" %}LANGUAGES CXX
  {% else if lang =="c"%}LANGUAGES C
  {% endif %}
)


file(GLOB_RECURSE SOURCE_FILES
    src/*.{{lang}}  
)


# Create the static library
add_library(${PROJECT_NAME} STATIC ${SOURCE_FILES} ${HEADER_FILES})

# Specify include directories for the library
target_include_directories(${PROJECT_NAME} PUBLIC {{include_dir}})

# Enable C++17 (or another standard if needed)
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_20)

# Set compiler options, can be adjusted depending on your needs
target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wextra -pedantic)

set(BUILD_DIR {{ build_dir }})
set_target_properties(
  ${PROJECT_NAME} 
  PROPERTIES 
    RUNTIME_OUTPUT_DIRECTORY build
)
set_target_properties(
  ${PROJECT_NAME} 
  PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
)
set_target_properties(
  ${PROJECT_NAME} 
  PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/lib"
)

# Installation rules
install(TARGETS ${PROJECT_NAME} DESTINATION lib)
install(FILES ${HEADER_FILES} DESTINATION include)

